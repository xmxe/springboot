spring.application.name=admin-server
server.port=8091
#eureka.client.service-url.defaultZone=http://localhost:8080/eureka/
# 客户端每隔30秒从Eureka服务上更新一次服务信息
#eureka.client.registry-fetch-interval-seconds=30
# 需要将我的服务注册到eureka上
#eureka.client.register-with-eureka=true
# 需要检索服务
#eureka.client.fetch-registry=true
# 启用ip配置 这样在注册中心列表中看见的是以ip+端口呈现的
#eureka.instance.prefer-ip-address=true
#eureka.instance.health-check-url-path=/actuator/health
# Eureka中的metadataMap是专门用来存放一些自定义的数据，
# 当注册中心或者其他服务需要此服务的某些配置时可以在metadataMap里取。
# 实际上，每个instance都有各自的metadataMap，map中存放着需要用到的属性。
# 例如，上面配置中的eureka.instance.metadata-map.username，当这个服务成功注册到Eureka上，
# Spring Boot Admin就会取拿到这个instance，进而拿到metadataMap里的属性，
# 然后放入请求头，向此服务发送请求，访问此服务的Actuator开放的端点。
# 说白了，这个为了连接到自己,把密码告诉eureka，spring boot admin server拿着密码去连接客户端应用，监控信息
#eureka.instance.metadata-map.user.name=${spring.security.user.name}
#eureka.instance.metadata-map.user.password=${spring.security.user.password}
# 不显示admin-security-server的监控信息
# spring.boot.admin.discovery.ignored-services=${spring.application.name}
spring.security.user.name=admin
spring.security.user.password=admin