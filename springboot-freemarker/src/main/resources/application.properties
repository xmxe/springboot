#FreeMarker配置
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/freemarker/
#该方法返回Freemarker模板解析引擎是否工作在“Classic Compatibile”模式下。如果这个模式被激活，则Freemarker模板解析引擎将以以下的方式工作：（类似于1.7.x这个版本的运行方式，这个也是1.7.x的版本被称为“经典的Freemarker”的由来）。
#   处理未定义的表达式，也就是说"expr"为null值。
#   1、作为像表达式“<assign varname=expr>”、“${expr}”、“ otherexpr == expr“、“otherexpr != expr”条件表达式或者是“hash[expr]”表达式的参数，这个参数将被当成空字符来对待。（译者注：这里注意空字符和null是不一样的).
#   2、作为“<list expr as item>”、“<foreach item in expr>”这样的表达式的参数，其循环体将不会被执行，和list的长度为0是一样的。
#   3、作为“<if>”或者其他布尔表达式命令的参数，空值将被当成是false来处理。非布尔数据模型或者逻辑操作数也可以放在“<if>”表达式中，空模型（长度为零的字符串，空的数组或者hash集合）都被当成是false来对待，其他情况下都被当成是true来处理。
#   4、当布尔值被当成字符串（比如用${...}输出，或者是和其他字符串连接），true值将被转换成“true”字符串处理，false值将被转换成空字符串。
#   5、提供给<list>和<foreach>的标量数据模型参数将被当成只包含一个该模型的list来处理。（译者注：就是说，传给<list>和<foreach>的参数不是list或者数组类型的，而是单个元素，则会被当成只有一个元素的list或者数组）
#   6、“<include>”标签的路径参数将被作为绝对路径处理。（译者注：这里很多网上的文档都没有提过，是本人经过观察发现的，然后从源码和其注释中找到的。在这种情况下，如果传入的ftl路径是相对路径，则会报找不到文件的异常）。
#   在其他方面，甚至是在兼容模式下，这个Freemaker解析引擎是2.1引擎，你不会因此而丢掉其他新的功能。
spring.freemarker.settings.classic_compatible=false